{"version":3,"sources":["hook/usePrevious.tsx","components/TransitionGroupContent.tsx","containers/Layout.tsx","reportWebVitals.ts","index.tsx"],"names":["usePrevious","value","ref","useRef","useEffect","current","TransitionGroupContent","props","useState","currentIndex","setCurrentIndex","viewWrapWidth","width","imageWidth","perPage","pageIdReference","images","length","prevPageIdReference","prevImagesLength","prevButtonDisable","nextButtonDisable","currentIndexPlus","currentIndexMinus","ImageView","className","style","transform","map","image","index","src","alt","ClearButton","clearProp","clear","onClick","removePic","disabled","e","preventDefault","Layout","setImages","i","slice","url","Math","random","imageDom","Image","onload","addPic","icon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.003495f0.chunk.js","sourcesContent":["import { useEffect , useRef } from 'react';\r\n\r\nfunction usePrevious(value: any){\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nexport default usePrevious as any;\r\n","import { useState , useEffect} from 'react';\r\nimport  usePrevious  from 'hook/usePrevious';\r\n// import MaterialIcon from 'material-icons-react';\r\n\r\nconst TransitionGroupContent = (props: any) => {\r\n    const [currentIndex, setCurrentIndex] = useState<number>(0);\r\n\r\n    // 幻燈片長度 8是css中image的padding\r\n    const viewWrapWidth = { width: (props.imageWidth + 8) * props.perPage + \"px\" };\r\n    const pageIdReference = () => { return props.images.length - props.perPage };\r\n    // 儲存 pageIdReference 前一個值\r\n    const prevPageIdReference = usePrevious(pageIdReference());\r\n    // 儲存 props.images.length 前一個值\r\n    const prevImagesLength = usePrevious(props.images.length);\r\n    // 按鈕禁止狀態\r\n    const prevButtonDisable = () =>{ return !currentIndex };\r\n    const nextButtonDisable = () =>{ return props.images.length <= props.perPage || currentIndex >= pageIdReference()};\r\n    \r\n    const currentIndexPlus = () => {\r\n        nextButtonDisable() || setCurrentIndex(currentIndex+1);\r\n    }\r\n    const currentIndexMinus = () => {\r\n        prevButtonDisable() || setCurrentIndex(currentIndex-1);\r\n    }\r\n\r\n    useEffect(() => { \r\n        props.images.length > prevImagesLength ? currentIndexPlus() : currentIndexMinus();\r\n\r\n        //新增時到新圖片的定點\r\n        if(prevPageIdReference < pageIdReference() && !nextButtonDisable()){\r\n            setCurrentIndex(pageIdReference());\r\n        }\r\n    }, \r\n    [props.images] \r\n    );\r\n\r\n    const ImageView = () => {\r\n        // 移動畫面位置\r\n        const movedDistance = () => { return {transform:`translateX(${currentIndex * -1 * (props.imageWidth + 8)}px)`}};\r\n        \r\n        if (props.images.length) {\r\n            return <div className=\"image-list\" style={ movedDistance() }>\r\n                        {props.images.map((image: string | undefined,index:number) => {\r\n                            return <div key={index} className=\"image\">\r\n                                        <img src={image} alt=\"\"  />\r\n                                        <ClearButton index={index} />\r\n                                    </div>;\r\n                        })}\r\n                    </div>;\r\n        }\r\n        return <div className=\"no-image\">尚未加入圖片</div>;\r\n    }\r\n\r\n    const ClearButton = (clearProp: any) => {\r\n        return props.clear ? <span className=\"image-remover\" onClick={() => props.removePic(clearProp.index)}>\r\n                                &times;\r\n                            </span>\r\n                            : null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"image-list-wrap\" style={viewWrapWidth}>\r\n                <ImageView />\r\n            </div>\r\n            <div className=\"image-buttons-block\">\r\n                <button\r\n                    className={`image-prev ${prevButtonDisable() ? 'disable' : ''}`}\r\n                    disabled={prevButtonDisable()}\r\n                    onClick={(e)=> { e.preventDefault(); currentIndexMinus() }}\r\n                >\r\n                    <span className=\"material-icons\">arrow_back</span>\r\n                    {/* <MaterialIcon icon=\"arrow_back\" /> */}\r\n                </button>\r\n\r\n                <button\r\n                    className={`image-next ${nextButtonDisable() ? 'disable' : ''}`}\r\n                    disabled={nextButtonDisable()}\r\n                    onClick={(e)=>{ e.preventDefault(); currentIndexPlus() }}\r\n                >\r\n                    <span className=\"material-icons\">arrow_forward</span>\r\n                    {/* <MaterialIcon icon=\"arrow_forward\" /> */}\r\n                </button>\r\n            </div>\r\n            <p className=\"image-desc\">{currentIndex} / {props.images.length}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TransitionGroupContent;","import {useState} from 'react';\nimport TransitionGroupContent from 'components/TransitionGroupContent';\nimport MaterialIcon from 'material-icons-react';\n\nconst Layout = () => {\n  const [images, setImages] = useState<string[]>([]);\n  const [imageWidth] = useState<number>(400);\n  const [perPage] = useState<number>(3);\n  const [clear] = useState<boolean>(true);\n\n  const addPic = () => {\n      // 借用類星體的萬用圖片:D 推廣: https://quasar.dev/start/quasar-cli\n    let url = `https://placeimg.com/${imageWidth}/300/nature?t=` + Math.random();\n\n    var imageDom = new Image();\n    imageDom.onload = e => {\n      setImages([...images,url]);\n    };\n    imageDom.src = url;\n  }\n\n    const removePic = (i: number) => {\n      setImages([ ...images.slice(0, i), ...images.slice(i + 1) ]);\n    }\n\n    return (\n    <div className=\"Layout\">\n      <header className=\"Layout-header\">\n        <h4>SlideShow</h4>\n        <TransitionGroupContent images={images} imageWidth={imageWidth} perPage={perPage} clear={clear} removePic={removePic} />\n        <button className=\"image-adder\" onClick={(e) => { e.preventDefault(); addPic() }}>\n          {/* <span className=\"material-icons\">add_photo_alternate</span> */}\n          <MaterialIcon icon=\"add_photo_alternate\" />\n        </button>\n      </header>\n    </div>\n  );\n}\n\nexport default Layout;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Layout from 'containers/Layout';\nimport reportWebVitals from 'reportWebVitals';\nimport 'assets/css/App.css';\nimport 'assets/css/index.css';\nimport 'assets/css/TransitionGroup.less';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}